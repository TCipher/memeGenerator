{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\memeGenerator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  /**\r\n   * Challenge: \r\n   * 1. Set up the text inputs to save to\r\n   *    the `topText` and `bottomText` state variables.\r\n   * 2. Replace the hard-coded text on the image with\r\n   *    the text being saved to state.\r\n   */\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setallMeme] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  console.log(allMemes);\n\n  function getMemeImage() {\n    const memesArray = allMemes.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      type,\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => {\n      return { ...prevMeme,\n        [name]: value\n      };\n    });\n  }\n\n  console.log(meme);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"top-text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"bottom--text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image  \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"dgspo9uMEwRL4x+IS26PvzqQ5dQ=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setallMeme","useEffect","fetch","then","res","json","data","setAllMemes","memes","console","log","getMemeImage","memesArray","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","type","name","value","target"],"sources":["C:/Users/user/memeGenerator/src/components/Meme.js"],"sourcesContent":["import React from \"react\"\r\n\r\n\r\nexport default function Meme(){\r\n    /**\r\n     * Challenge: \r\n     * 1. Set up the text inputs to save to\r\n     *    the `topText` and `bottomText` state variables.\r\n     * 2. Replace the hard-coded text on the image with\r\n     *    the text being saved to state.\r\n     */\r\n    const [meme,setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\r\n    })\r\n    const [allMemes, setallMeme] = React.useState([])\r\n    React.useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(res => res.json())\r\n            .then(data => setAllMemes(data.data.memes))\r\n    }, [])\r\n    \r\n    console.log(allMemes)\r\n     \r\n      function getMemeImage() {\r\n        const memesArray = allMemes.data.memes\r\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\r\n        const url = memesArray[randomNumber].url\r\n        setMeme(prevMeme =>\r\n            ({\r\n                ...prevMeme,\r\n               randomImage: url\r\n\r\n            }))\r\n        \r\n    }\r\n    function handleChange(event){\r\n        const {type, name, value} = event.target\r\n        setMeme(prevMeme => {\r\n            return {\r\n                ...prevMeme,\r\n                [name]: value\r\n\r\n            }\r\n        })\r\n    }\r\n    console.log(meme)\r\n    \r\n    return (\r\n        <main>\r\n            <div className=\"form\">\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form--input\"\r\n                    placeholder=\"top-text\"\r\n                    name = \"topText\"\r\n                    value = {meme.topText}\r\n                    onChange ={handleChange}\r\n                    />\r\n                    <input \r\n                    type=\"text\" \r\n                     className=\"form--input\"\r\n                     placeholder=\"bottom--text\"\r\n                     name = \"bottomText\"\r\n                     value = {meme.bottomText}\r\n                     onChange ={handleChange}\r\n                    />\r\n                    <button className=\"form--button\" onClick ={getMemeImage}>Get a new meme image  ðŸ–¼</button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <img src={meme.randomImage} className=\"meme--image\" />\r\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n            \r\n        </main>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,KAAK,CAACI,QAAN,CAAe;IAClCC,OAAO,EAAE,EADyB;IAElCC,UAAU,EAAE,EAFsB;IAGlCC,WAAW,EAAE;EAHqB,CAAf,CAAvB;EAKA,MAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,KAAK,CAACI,QAAN,CAAe,EAAf,CAA/B;EACAJ,KAAK,CAACU,SAAN,CAAgB,MAAM;IAClBC,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,WAAW,CAACD,IAAI,CAACA,IAAL,CAAUE,KAAX,CAF7B;EAGH,CAJD,EAIG,EAJH;EAMAC,OAAO,CAACC,GAAR,CAAYX,QAAZ;;EAEE,SAASY,YAAT,GAAwB;IACtB,MAAMC,UAAU,GAAGb,QAAQ,CAACO,IAAT,CAAcE,KAAjC;IACA,MAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,UAAU,CAACK,MAAtC,CAArB;IACA,MAAMC,GAAG,GAAGN,UAAU,CAACC,YAAD,CAAV,CAAyBK,GAArC;IACAxB,OAAO,CAACyB,QAAQ,KACX,EACG,GAAGA,QADN;MAEErB,WAAW,EAAEoB;IAFf,CADW,CAAT,CAAP;EAOH;;EACD,SAASE,YAAT,CAAsBC,KAAtB,EAA4B;IACxB,MAAM;MAACC,IAAD;MAAOC,IAAP;MAAaC;IAAb,IAAsBH,KAAK,CAACI,MAAlC;IACA/B,OAAO,CAACyB,QAAQ,IAAI;MAChB,OAAO,EACH,GAAGA,QADA;QAEH,CAACI,IAAD,GAAQC;MAFL,CAAP;IAKH,CANM,CAAP;EAOH;;EACDf,OAAO,CAACC,GAAR,CAAYjB,IAAZ;EAEA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACQ;QACA,IAAI,EAAC,MADL;QAEA,SAAS,EAAC,aAFV;QAGA,WAAW,EAAC,UAHZ;QAIA,IAAI,EAAG,SAJP;QAKA,KAAK,EAAIA,IAAI,CAACG,OALd;QAMA,QAAQ,EAAGwB;MANX;QAAA;QAAA;QAAA;MAAA,QADR,eASQ;QACA,IAAI,EAAC,MADL;QAEC,SAAS,EAAC,aAFX;QAGC,WAAW,EAAC,cAHb;QAIC,IAAI,EAAG,YAJR;QAKC,KAAK,EAAI3B,IAAI,CAACI,UALf;QAMC,QAAQ,EAAGuB;MANZ;QAAA;QAAA;QAAA;MAAA,QATR,eAiBQ;QAAQ,SAAS,EAAC,cAAlB;QAAiC,OAAO,EAAGT,YAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAoBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAElB,IAAI,CAACK,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,IAAI,CAACI;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;GA3EuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}